<?xml version="1.0"?>
<xsl:stylesheet version="1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
		xmlns:bridge="http://www.thomasoandrews.com/xmlns/bridge"
		xmlns:html="http://www.w3.org/TR/REC-html40"
		xmlns:fo="http://www.w3.org/1999/XSL/Format"
		xmlns="http://www.w3.org/1999/XSL/Format">
<xsl:output method="xml" version="1.0"/>
<!--
<xsl:variable name="heart"><fo:external-graphic src="file:graphics/H.gif"/></xsl:variable>

<xsl:variable name="diamond"><fo:external-graphic src="file:graphics/D.gif"/></xsl:variable>

<xsl:variable name="spade"><fo:external-graphic src="file:graphics/S.gif"/></xsl:variable>

<xsl:variable name="club"><fo:external-graphic src="file:graphics/C.gif"/></xsl:variable>
-->

<xsl:variable name="heart"><fo:inline font-family="Symbol" color="red"><xsl:text disable-output-escaping="yes">&amp;#x2665;</xsl:text></fo:inline></xsl:variable>
<xsl:variable name="diamond"><fo:inline font-family="Symbol" color="red"><xsl:text disable-output-escaping="yes">&amp;#x2666;</xsl:text></fo:inline></xsl:variable>
<xsl:variable name="spade"><fo:inline font-family="Symbol" color="black"><xsl:text disable-output-escaping="yes">&amp;#x2660;</xsl:text></fo:inline></xsl:variable>
<xsl:variable name="club"><fo:inline font-family="Symbol" color="black"><xsl:text disable-output-escaping="yes">&amp;#x2663;</xsl:text></fo:inline></xsl:variable>
<!--
<xsl:variable name="heart"><fo:inline color="red">H</fo:inline></xsl:variable>
<xsl:variable name="diamond"><fo:inline color="red">D</fo:inline></xsl:variable>
<xsl:variable name="spade"><fo:inline color="black">S</fo:inline></xsl:variable>
<xsl:variable name="club"><fo:inline color="black">C</fo:inline></xsl:variable>
-->

<xsl:variable name="regularsize">10pt</xsl:variable>
<xsl:variable name="headingsize">12pt</xsl:variable>
<xsl:variable name="titlesize">15pt</xsl:variable>
<xsl:variable name="booktitlesize">20pt</xsl:variable>
<xsl:variable name="diagsize">10pt</xsl:variable>
<xsl:variable name="ten">10</xsl:variable>
<xsl:variable name="playedcolor">#9999CC</xsl:variable>
<xsl:variable name="playedfontsize">0.7em</xsl:variable>

<xsl:variable name="formatnotes" select="document('formatnotes.xml')/bridge:p"/>

<!-- Not technically necessary, but prefer it -->
<xsl:key name="Diagram" match="bridge:diagram" use="@id"/>

<xsl:strip-space elements="*"/>
<xsl:template match="/">
<fo:root>
<fo:layout-master-set>

    <fo:simple-page-master
      master-name="first"
      margin-top="1in"
      margin-left="0.5in"
      margin-right="0.5in"
      margin-bottom="1in">

        <fo:region-before text-align="center" extent="1in" region-name="TitleRegion"/>
        <fo:region-body column-count="2" 
                        margin-top="1.0in"
                        column-gap="0.5in"/>
    </fo:simple-page-master>

    <fo:simple-page-master
      master-name="rest"
      margin-top="0.5in"
      margin-left="0.5in"
      margin-right="0.5in"
      margin-bottom="1in">
        <fo:region-body column-count="2" 
                        margin-top="0.5in"
                        column-gap="0.5in"/>
        <fo:region-before text-align="center" extent="0.5in" region-name="PageRegion"/>
    
    </fo:simple-page-master>

    <fo:page-sequence-master master-name="General">
        <fo:repeatable-page-master-alternatives>
            <fo:conditional-page-master-reference
		page-position="first"
                master-name="first"/>
            <fo:conditional-page-master-reference
		page-position="rest"
                master-name="rest"/>
        </fo:repeatable-page-master-alternatives>
    </fo:page-sequence-master>

</fo:layout-master-set>

<fo:page-sequence master-name="General">
<xsl:apply-templates select="bridge:book"/>
</fo:page-sequence>
</fo:root>

</xsl:template>

<xsl:template name="complex-holding">

<xsl:param name="original"/>
<xsl:param name="current"/>

<xsl:choose>
<xsl:when test="''=$current">
<xsl:call-template name="played-holding">
<xsl:with-param name="played" select="$original"/>
</xsl:call-template>
</xsl:when>

<xsl:when test="substring($current,1,1)='^'">
<xsl:call-template name="played-holding">
<xsl:with-param name="played"
                select="substring-before($original,substring($current,2,1))"/>
</xsl:call-template><xsl:call-template name="holding-faced">
<xsl:with-param name="string" select="substring($current,2,1)"/>
</xsl:call-template><xsl:call-template name="complex-holding">
<xsl:with-param name="original" 
                select="substring-after($original,substring($current,2,1))"/>
<xsl:with-param name="current"
                select="substring($current,3)"/>
</xsl:call-template>        
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="played-holding">
    <xsl:with-param name="played"
                select="substring-before($original,substring($current,1,1))"/>
</xsl:call-template><xsl:call-template name="holding-string">
    <xsl:with-param name="string"
          select="substring($current,1,1)"
/></xsl:call-template><xsl:call-template name="complex-holding">
<xsl:with-param name="original" 
                select="substring-after($original,substring($current,1,1))"/>
<xsl:with-param name="current"
                select="substring($current,2)"/>
</xsl:call-template>        
</xsl:otherwise>
</xsl:choose>

</xsl:template>

<xsl:template name="played-holding">
<xsl:param name="played"/>
<xsl:if test="$played">
<fo:inline font-size="{$playedfontsize}" color="{$playedcolor}"
><xsl:call-template name="holding-string">
<xsl:with-param name="string" select="$played"/>
</xsl:call-template></fo:inline>
</xsl:if>
</xsl:template>

<xsl:template name="holding-string">
<xsl:param name="string"/>
<xsl:choose>
    <xsl:when test="contains($string,'T')">
    <xsl:value-of select="substring-before($string,'T')"/><xsl:copy-of select="$ten"/><xsl:value-of select="substring-after($string,'T')"/>
    </xsl:when>
    <xsl:otherwise>
    <xsl:value-of select="$string"/>
    </xsl:otherwise>
    </xsl:choose>
</xsl:template>

<xsl:template name="holding-faced">
<xsl:param name="string"/>
<fo:inline font-weight="bold" color="#0033FF"><xsl:value-of select="$string"/></fo:inline>
</xsl:template>

<!--
<xsl:template mode="holding" match="bridge:played">
<xsl:call-template name="holding-faced">
<xsl:with-param name="string" select="."/>
</xsl:call-template>
</xsl:template>
-->

<!--
<xsl:template mode="holding" match="*">
<xsl:apply-templates mode="holding"/>
</xsl:template>
-->

<xsl:template match="bridge:book">
<fo:static-content flow-name="TitleRegion">
<fo:block text-align="center" space-after="14pt" font-variant="small-caps" font-family="Helvetica" font-size="{$booktitlesize}"><xsl:apply-templates select="bridge:booktitle"/></fo:block>
<fo:block font-size="10pt" text-align="center"><xsl:value-of select="bridge:author/bridge:firstname"/><xsl:text> </xsl:text><xsl:value-of select="bridge:author/bridge:lastname"/></fo:block>

</fo:static-content>

<fo:static-content flow-name="PageRegion">
<fo:block text-align="end" font-size="8pt">
<xsl:apply-templates select="bridge:booktitle"/><xsl:text> &#x2014; </xsl:text><fo:page-number/>
</fo:block>
</fo:static-content>

<fo:flow flow-name="xsl-region-body">
<xsl:apply-templates select="bridge:article|bridge:chapter"/>
</fo:flow>
</xsl:template>

<xsl:template match="bridge:booktitle">
<xsl:apply-templates/>
</xsl:template>

<xsl:template match="bridge:article[@href]">
<xsl:apply-templates select="document(@href)/bridge:article"/>
</xsl:template>

<xsl:template match="bridge:article">
<fo:block break-after="column"><xsl:apply-templates/></fo:block>
</xsl:template>

<xsl:template match="bridge:title[parent::bridge:chapter]">
<fo:block keep-with-next.within-page="10" keep-with-next.within-column="10" space-before.conditionality="discard" space-before="10pt" space-after="10pt" font-size="15pt" font-variant="small-caps" font-family="Helvetica" text-align="start"><xsl:number level="any" count="//bridge:chapter/bridge:title" format="I"/>. <xsl:apply-templates/></fo:block>
</xsl:template>

<xsl:template match="bridge:chapter">
<fo:block>
<xsl:apply-templates/>
</fo:block>
</xsl:template>

<xsl:template match="bridge:title">
<fo:block keep-with-next.within-page="10" keep-with-next.within-column="10" font-variant="small-caps" font-size="{$titlesize}" space-before="8pt" space-after="8pt" font-family="Helvetica" text-align="start"><xsl:apply-templates/></fo:block>
</xsl:template>

<xsl:template name="holding">
<xsl:param name="suit"/>
<xsl:param name="original"/>
<xsl:param name="attr"/>
<fo:table-row>
<fo:table-cell><fo:block text-align="end" font-size="{$diagsize}"><xsl:copy-of select="$suit"/></fo:block></fo:table-cell>
<fo:table-cell>
<fo:block font-size="{$diagsize}" text-align="start">
<xsl:choose>
<xsl:when test="concat($original,$attr)">
<xsl:call-template name="complex-holding">
<xsl:with-param name="current" select="string($attr)"/>
<xsl:with-param name="original" select="string($original)"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise><fo:inline>&#x2014;</fo:inline></xsl:otherwise>
</xsl:choose>
</fo:block>
</fo:table-cell>
</fo:table-row>
</xsl:template>

<xsl:template name="writehand">
<xsl:param name="original"/>
<xsl:param name="hand"/>
<xsl:comment>
<xsl:value-of select="original/@*"/>
</xsl:comment>
<fo:table>
<fo:table-column padding-right="3pt" column-width="10pt" text-align="center"/>
<fo:table-column text-align="start" column-width="56pt"/>
<fo:table-body>
<xsl:if test="$hand/@sp">
<xsl:call-template name="holding">
	<xsl:with-param name="suit" select="$spade"/>
        <xsl:with-param name="original" 
                        select="translate($original/@sp,'^','')"/>
	<xsl:with-param name="attr" select="$hand/@sp"/>
   </xsl:call-template>
</xsl:if>

<xsl:if test="$hand/@he">
   <xsl:call-template name="holding">
	<xsl:with-param name="suit" select="$heart"/>
        <xsl:with-param name="original"
                        select="translate($original/@he,'^','')"/>
	<xsl:with-param name="attr" select="$hand/@he"/>
   </xsl:call-template>
</xsl:if>

<xsl:if test="$hand/@di">
   <xsl:call-template name="holding">
	<xsl:with-param name="suit" select="$diamond"/>
        <xsl:with-param name="original"
                        select="translate($original/@di,'^','')"/>
	<xsl:with-param name="attr" select="$hand/@di"/>
   </xsl:call-template>
</xsl:if>

<xsl:if test="bridge:cl|$hand/@cl">
   <xsl:call-template name="holding">
	<xsl:with-param name="suit" select="$club"/>
        <xsl:with-param name="original"
                        select="translate($original/@cl,'^','')"/>
	<xsl:with-param name="attr" select="$hand/@cl"/>
   </xsl:call-template>
</xsl:if>
</fo:table-body>
</fo:table>
</xsl:template>

<xsl:template match="bridge:played">
<inline font-weight="bold"><xsl:apply-templates/></inline>
</xsl:template>

<xsl:template match="bridge:em">
<inline font-style="italic"><xsl:apply-templates/></inline>
</xsl:template>

<xsl:template match="bridge:author"></xsl:template>

<xsl:template match="bridge:programdata">
</xsl:template>

<xsl:template match="bridge:North|bridge:East|bridge:South|bridge:West">
<fo:block>
	<xsl:call-template name="writehand"/>
</fo:block>
</xsl:template>

<xsl:template name="cardsplayed">
<!--
<fo:table width="100%">
<fo:table-column width="33.333%"/>
<fo:table-column width="33.333%"/>
<fo:table-column width="33.333%"/>
<fo:table-body>
<fo:table-row height="1em"><fo:table-cell/><fo:table-cell>
<fo:block text-align="center">
<xsl:call-template name="cardplayed">
<xsl:with-param name="hand" select="./bridge:North"/>
</xsl:call-template>
</fo:block></fo:table-cell></fo:table-row>
<fo:table-row height="2em"><fo:table-cell><fo:block text-align="start">
<xsl:call-template name="cardplayed">
<xsl:with-param name="hand" select="./bridge:West"/>
</xsl:call-template>
</fo:block></fo:table-cell><fo:table-cell/>
<fo:table-cell><fo:block text-align="end">
<xsl:call-template name="cardplayed">
<xsl:with-param name="hand" select="./bridge:East"/>
</xsl:call-template>
</fo:block></fo:table-cell></fo:table-row>
<fo:table-row height="1em"><fo:table-cell/><fo:table-cell>
<fo:block text-align="center">
<xsl:call-template name="cardplayed">
<xsl:with-param name="hand" select="./bridge:South"/>
</xsl:call-template>
</fo:block></fo:table-cell></fo:table-row>
</fo:table-body>
</fo:table>
-->
</xsl:template>

<xsl:template name="cardplayed">
<xsl:param name="hand"/>
<xsl:choose>
<xsl:when test="contains(string($hand/@sp),'^')">
<xsl:copy-of select="$spade"/>
<xsl:call-template name="holding-string">
  <xsl:with-param name="string" select="substring(substring-after($hand/@sp,'^'),1,1)"/>
</xsl:call-template>
</xsl:when>

<xsl:when test="contains(string($hand/@he),'^')">
<xsl:copy-of select="$heart"/>
<xsl:call-template name="holding-string">
  <xsl:with-param name="string" select="substring(substring-after($hand/@he,'^'),1,1)"/>
</xsl:call-template>
</xsl:when>

<xsl:when test="contains(string($hand/@di),'^')">
<xsl:copy-of select="$diamond"/>
<xsl:call-template name="holding-string">
  <xsl:with-param name="string" select="substring(substring-after($hand/@di,'^'),1,1)"/>
</xsl:call-template>
</xsl:when>

<xsl:when test="contains(string($hand/@cl),'^')">
<xsl:copy-of select="$club"/>
<xsl:call-template name="holding-string">
  <xsl:with-param name="string" select="substring(substring-after($hand/@cl,'^'),1,1)"/>
</xsl:call-template>
</xsl:when>

</xsl:choose>
</xsl:template>

<xsl:template match="bridge:diagram[@original]">
<xsl:call-template name="diagram">
<xsl:with-param name="original" select="key('Diagram',@original)"/>
</xsl:call-template>
</xsl:template>

<xsl:template match="bridge:diagram">
<xsl:call-template name="diagram">
<xsl:with-param name="original" select="."/>
</xsl:call-template>
</xsl:template>

<xsl:template name="diagram">
<xsl:param name="original"/>
<fo:block text-align="center" space-before="10pt" space-after="10pt" width="230pt" keep-together.within-page="10" keep-together.within-column="10">
<fo:table>
<fo:table-column column-width="30pt"/>
<fo:table-column column-width="20pt"/>
<fo:table-column column-width="20pt"/>
<fo:table-column column-width="20pt"/>
<fo:table-column column-width="20pt"/>
<fo:table-column column-width="20pt"/>
<fo:table-column column-width="20pt"/>
<fo:table-column column-width="20pt"/>
<fo:table-column column-width="20pt"/>
<fo:table-column column-width="20pt"/>
<fo:table-column column-width="20pt"/>
<fo:table-body keep-together.within-page="10" keep-together.within-column="10">
<fo:table-row>
<fo:table-cell number-columns-spanned="4">
<xsl:apply-templates select="bridge:diagramhead"/>
</fo:table-cell>
<fo:table-cell number-columns-spanned="4"><fo:block>
<xsl:call-template name="writehand">
<xsl:with-param name="hand" select="bridge:North"/>
<xsl:with-param name="original" select="$original/bridge:North"/>
</xsl:call-template>
</fo:block></fo:table-cell>
</fo:table-row>
<fo:table-row>
<fo:table-cell number-columns-spanned="1"/>
<fo:table-cell number-columns-spanned="4">
<xsl:call-template name="writehand">
<xsl:with-param name="hand" select="bridge:West"/>
<xsl:with-param name="original" select="$original/bridge:West"/>
</xsl:call-template>
</fo:table-cell>

<fo:table-cell number-columns-spanned="2"><fo:block>
<xsl:call-template name="cardsplayed"/>
</fo:block></fo:table-cell>

<fo:table-cell number-columns-spanned="4">
<xsl:call-template name="writehand">
<xsl:with-param name="hand" select="bridge:East"/>
<xsl:with-param name="original" select="$original/bridge:East"/>
</xsl:call-template>
</fo:table-cell></fo:table-row>
<fo:table-row>
<fo:table-cell number-columns-spanned="4"/>
<fo:table-cell number-columns-spanned="4">
<xsl:call-template name="writehand">
<xsl:with-param name="hand" select="bridge:South"/>
<xsl:with-param name="original" select="$original/bridge:South"/>
</xsl:call-template>
</fo:table-cell>
</fo:table-row>
</fo:table-body>
</fo:table>
</fo:block>
</xsl:template>

<xsl:template match="bridge:a[@href]">
<xsl:apply-templates/>
</xsl:template>

<xsl:template match="bridge:h2">
<fo:block font-size="{$headingsize}" keep-with-next.within-page="10" keep-with-next.within-column="10" space-after.optimum="10pt" space-after.conditionality="discard" font-variant="small-caps" text-align="justify"><xsl:apply-templates/></fo:block>
</xsl:template>

<xsl:template match="bridge:ul">
<fo:list-block space-before="5pt" space-after="5pt">
<xsl:for-each select="bridge:li">
<fo:list-item>
<fo:list-item-label><fo:block>&#x2022;</fo:block></fo:list-item-label>
<fo:list-item-body>
<fo:block font-size="{$regularsize}" space-after="10pt" text-align="justify"><xsl:apply-templates/></fo:block>
</fo:list-item-body>
</fo:list-item>
</xsl:for-each>
</fo:list-block>
</xsl:template>


<xsl:template match="bridge:p">
<fo:block widows="2" orphans="2" font-size="{$regularsize}" space-after.maximum="90pt" space-after.optimum="10pt" space-after.minimum="5pt" space-after.conditionality="discard" text-align="justify"><xsl:apply-templates/></fo:block>
</xsl:template>

<xsl:template match="bridge:formatnotes">
<xsl:apply-templates select="$formatnotes"/>
</xsl:template>

<xsl:template match="*">
<xsl:apply-templates/>
</xsl:template>

</xsl:stylesheet>
